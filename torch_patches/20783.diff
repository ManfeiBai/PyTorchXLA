diff --git a/aten/src/ATen/native/Copy.cpp b/aten/src/ATen/native/Copy.cpp
index eb9e4ab5c0c..2f328350c27 100644
--- a/aten/src/ATen/native/Copy.cpp
+++ b/aten/src/ATen/native/Copy.cpp
@@ -80,7 +80,6 @@ Tensor & copy_(Tensor & self, const Tensor & src, bool non_blocking) {
   TORCH_CHECK(self.defined(), "self is undefined");
   TORCH_CHECK(self.defined(), "src is undefined");
 
-  Tensor b_src;
   if (self.is_sparse() && src.is_sparse()) {
     return at::copy_sparse_to_sparse_(self, src, non_blocking);
   } else if (self.is_sparse() || src.is_sparse()) {
@@ -92,6 +91,15 @@ Tensor & copy_(Tensor & self, const Tensor & src, bool non_blocking) {
     return self;
   }
 
+  // Re-dispatch copies with src device not implemented here (e.g. XLA).
+  // This includes: cpu_tensor.copy_(xla_tensor) which
+  // calls xla_tensor._copy_from(cpu_tensor)
+  if (!src.device().is_cuda() && !src.device().is_cpu()) {
+    TORCH_INTERNAL_ASSERT(self.device().is_cuda() || self.device().is_cpu());
+    at::_copy_from(src, self, non_blocking);
+    return self;
+  }
+
   if (self.scalar_type() == kQUInt8) {
     return quantized_copy_(self, src);
   }
diff --git a/aten/src/ATen/native/native_functions.yaml b/aten/src/ATen/native/native_functions.yaml
index 8500568e457..32ba1e696ab 100644
--- a/aten/src/ATen/native/native_functions.yaml
+++ b/aten/src/ATen/native/native_functions.yaml
@@ -456,6 +456,9 @@
   variants: method
   device_guard: False
 
+- func: _copy_from(Tensor self, Tensor dst, bool non_blocking=False) -> Tensor
+  dispatch: {}
+
 - func: cos(Tensor self) -> Tensor
   variants: function, method
 
